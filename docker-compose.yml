
services:
  redpanda:
    image: redpandadata/redpanda:v25.2.1
    container_name: redpanda
    command:
    - redpanda
    - start
    - --memory=1G
    - --reserve-memory=0M
    - --node-id=0
    - --check=false
    - --kafka-addr=PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
    - --advertise-kafka-addr=PLAINTEXT://redpanda:9092,OUTSIDE://localhost:29092
    - --pandaproxy-addr=PLAINTEXT://0.0.0.0:8082,OUTSIDE://0.0.0.0:18082
    - --advertise-pandaproxy-addr=PLAINTEXT://redpanda:8082,OUTSIDE://localhost:18082
    ports:
      - "9092:9092"
      - "29092:29092"
      - "8082:8082"
      - "18082:18082"

  redpanda-console:
    image: redpandadata/console:v2.8.8
    container_name: redpanda-console
    environment:
      - KAFKA_BROKERS=redpanda:9092
    depends_on:
      - redpanda
    ports:
      - "8080:8080"

  clickhouse:
    image: clickhouse/clickhouse-server:25.7
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: ${CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    volumes:
      - /var/lib/clickhouse/
      - /var/log/clickhouse-server/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123"]
      interval: 30s
      timeout: 10s
      retries: 5

  dbt:
    build:
      context: ./dbt
      dockerfile: Dockerfile
    container_name: dbt
    restart: on-failure
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    working_dir: /app
    command: >
      sh -c "dbt run && dbt docs generate && dbt docs serve --host 0.0.0.0 --port 8081"
    ports:
      - "8081:8081"
    depends_on:
      - clickhouse

  postgres-archive:
    image: postgres
    container_name: postgres-archive
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    ports:
      - "5431:5432"
    volumes:
      - ./postgres-archive-data:/var/lib/postgresql/data
    restart: unless-stopped

  dummy-producer:
    build:
      context: ./producers
      dockerfile: Dockerfile
    container_name: dummy-producer
    depends_on:
      - redpanda
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
    restart: unless-stopped

  consumer:
    build: 
      context: ./consumers
      dockerfile: Dockerfile
    container_name: consumers
    depends_on: 
      - dummy-producer
      - clickhouse
      - postgres-archive
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  superset:
    image: apache/superset:3.1.0
    container_name: superset
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY}
      ADMIN_USERNAME: ${SUPERSET_USERNAME}
      ADMIN_PASSWORD: ${SUPERSET_PASSWORD}
      ADMIN_FIRST_NAME: ${SUPERSET_FIRST_NAME}
      ADMIN_LAST_NAME: ${SUPERSET_LAST_NAME}
    ports:
      - "8088:8088"
    depends_on:
      - clickhouse
    volumes:
      - ./superset_home:/app/superset_home

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - clickhouse
      - postgres-archive


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
